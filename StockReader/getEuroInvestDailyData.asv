% function data = getEuroInvestDailyData(tickers)
% -------------------------------------------------------------------------
% function data = getEuroInvestDailyData(tickers)
% 
% John Nilsson, 2015-07-19 
% -------------------------------------------------------------------------

tickers = {'77151' '2617823'};

%% --- Initializing ---

% --- Checking current directory ---
CurrDir = pwd;

%% 1. Input parsing
% Check to see if a single ticker was provided as a string; if so, make it
% a cell array to better fit the later logic.
if ischar(tickers)
    tickers = {tickers};
end

% sds = urlread('http://www.euroinvestor.se/stock/historicalquotes.aspx?instrumentId=69316&format=CSV')

% --- Setting Prefix URL ---
url1 = 'http://www.euroinvestor.se/stock/historicalquotes.aspx?instrumentId=';

% --- Setting Suffix URL ---
url2 = '&format=CSV';

%% 2. Load Data in a loop
h = waitbar(0, 'Getting daily data from EuroInvest');

count = 0; % Initializing
err_count = 0; % Initializing



for iTicker = 1:length(tickers)

    while count == err_count

        try
            str = urlread([url1 tickers{iTicker} url2])
        catch
            % Special behaviour if str cannot be found: this means that no
            % price info was returned.  Error and say which asset is invalid:

            disp(['No data returned for ticker ''' tickers{iTicker} ...
                '' err_count])
            
            err_count = err_count + 1;  % Incrementing error count 
        end
        count = count + 1; % Incrementing count 
    end

    err_count = 0;  % Re-setting 
    count = 0;      % Re-setting
    
c = textscan(str, '%s%s%s%s%s%s', 'HeaderLines', 1, 'Delimiter', ';');

strcell2mat(strrep(c{2},',','.'))

return
if isBeforeR2013b
    ds = dataset(c{1}, c{2}, c{3}, c{4}, c{5}, c{6}, 'VarNames', ...
        {'Date', 'Open', 'High', 'Low', 'Close', 'Volume'});
else
    ds = table(c{1}, c{2}, c{3}, c{4}, c{5}, c{6}, 'VariableNames', ...
        {'Date', 'Open', 'High', 'Low', 'Close', 'Volume'});
end
ds.Date = datenum(ds.Date, 'yyyy-mm-dd HH:MM:SS');
ds = flipud(ds);
data.(genvarname(tickers{iTicker})) = ds;

waitbar(iTicker/length(tickers), h);
end

close(h)